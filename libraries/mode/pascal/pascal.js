(function(e){if(typeof exports=="object"&&typeof module=="object")e(require("../../lib/codemirror"));else if(typeof define=="function"&&define.amd)define(["../../lib/codemirror"],e);else e(CodeMirror)})(function(e){"use strict";e.defineMode("pascal",function(){function e(e){var r={},t=e.split(" ");for(var n=0;n<t.length;++n)r[t[n]]=true;return r}var r=e("and array begin case const div do downto else end file for forward integer "+"boolean char function goto if in label mod nil not of or packed procedure "+"program record repeat set string then to type until var while with");var t={"null":true};var n=/[+\-*&%=<>!?|\/]/;function i(e,i){var u=e.next();if(u=="#"&&i.startOfLine){e.skipToEnd();return"meta"}if(u=='"'||u=="'"){i.tokenize=o(u);return i.tokenize(e,i)}if(u=="("&&e.eat("*")){i.tokenize=a;return a(e,i)}if(/[\[\]{}\(\),;\:\.]/.test(u)){return null}if(/\d/.test(u)){e.eatWhile(/[\w\.]/);return"number"}if(u=="/"){if(e.eat("/")){e.skipToEnd();return"comment"}}if(n.test(u)){e.eatWhile(n);return"operator"}e.eatWhile(/[\w\$_]/);var f=e.current();if(r.propertyIsEnumerable(f))return"keyword";if(t.propertyIsEnumerable(f))return"atom";return"variable"}function o(e){return function(r,t){var n=false,i,o=false;while((i=r.next())!=null){if(i==e&&!n){o=true;break}n=!n&&i=="\\"}if(o||!n)t.tokenize=null;return"string"}}function a(e,r){var t=false,n;while(n=e.next()){if(n==")"&&t){r.tokenize=null;break}t=n=="*"}return"comment"}return{startState:function(){return{tokenize:null}},token:function(e,r){if(e.eatSpace())return null;var t=(r.tokenize||i)(e,r);if(t=="comment"||t=="meta")return t;return t},electricChars:"{}"}});e.defineMIME("text/x-pascal","pascal")});